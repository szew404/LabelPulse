"""
Django settings for LabelPulse project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import environ

from django.templatetags.static import static
from django.urls import reverse_lazy
from django.utils.translation import gettext_lazy as _

import os

# Initialise environment variables
env = environ.Env(
    DEBUG=(int, 0),
    ALLOWED_HOSTS=(str, ""),
    CELERY_BROKER_URL=(str, "redis://localhost:6379/0"),
    CELERY_RESULT_BACKEND=(str, "redis://localhost:6379/0"),
)
environ.Env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(env("DEBUG"))

ALLOWED_HOSTS = (env("DJANGO_ALLOWED_HOSTS")).split(" ")


# Application definition

INSTALLED_APPS = [
    # External Django admin theme
    "unfold",
    # Django
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # Internal
    "modules.utils",
    "modules.website",
    "modules.services",
    "modules.labels",
    "modules.campaigns",
    # External
    "rest_framework",
    "drf_spectacular",
    "storages",
    "corsheaders",
]

# Admin Unfold theme config
UNFOLD = {
    "SITE_TITLE": "Label Pulse",
    "SITE_HEADER": "Label Pulse",
    "SITE_URL": "hhtps://web.label-pulse.com/",
    # "SITE_ICON": lambda request: static("icon.svg"),  # both modes, optimise for 32px height
    "SITE_ICON": {
        "light": lambda request: static(
            "admin/img/labelpulse-sitelogo.png"
        ),  # light mode
        "dark": lambda request: static(
            "admin/img/labelpulse-sitelogo.png"
        ),  # dark mode
    },
    # "SITE_LOGO": lambda request: static("logo.svg"),  # both modes, optimise for 32px height
    "SITE_LOGO": {
        "light": lambda request: static(
            "admin/img/labelpulse-sitelogo.png"
        ),  # light mode
        "dark": lambda request: static(
            "admin/img/labelpulse-sitelogo.png"
        ),  # dark mode
    },
    "SITE_SYMBOL": "speed",  # symbol from icon set
    "SITE_FAVICONS": [
        {
            "rel": "icon",
            "sizes": "32x32",
            "type": "image/png",
            "href": lambda request: static("admin/img/labelpulse-favicon.png"),
        },
    ],
    "SHOW_HISTORY": False,  # show/hide "History" button, default: True
    "SHOW_VIEW_ON_SITE": False,  # show/hide "View on site" button, default: True
    "SIDEBAR": {
        "show_search": True,  # Search in applications and models names
        "navigation": [
            {
                "title": _("Navigation"),
                "separator": True,  # Top border
                "collapsible": False,  # Collapsible group of links
                "items": [
                    {
                        "title": _("Users"),
                        "icon": "people",
                        "link": "/admin/auth/user/",
                        "permission": lambda request: request.user.is_superuser,
                    },
                    {
                        "title": _("Groups"),
                        "icon": "group",
                        "link": "/admin/auth/group/",
                        "permission": lambda request: request.user.is_superuser,
                    },
                    {
                        "title": _("Home"),
                        "icon": "dashboard",  # Supported icon set: https://fonts.google.com/icons
                        "link": reverse_lazy("admin:index"),
                    },
                    {
                        "title": _("My Label"),
                        "icon": "graphic_eq",
                        "link": "/admin/labels/label/",
                    },
                    {
                        "title": _("Releases"),
                        "icon": "queue_music",
                        "link": "/admin/labels/release/",
                    },
                    {
                        "title": _("Tracks"),
                        "icon": "art_track",
                        "link": "/admin/labels/track/",
                    },
                    {
                        "title": _("Campaigns"),
                        "icon": "forward_to_inbox",
                        "link": "/admin/campaigns/campaign/",
                    },
                ],
            },
        ],
    },
}


"""# Jazzmin theme config
JAZZMIN_SETTINGS = {
    # title of the window (Will default to current_admin_site.site_title if absent or None)
    "site_title": "LabelPulse",
    # Title on the login screen (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_header": "LabelPulse",
    # Title on the brand (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_brand": "LabelPulse",
    # Welcome text on the login screen
    "welcome_sign": "Welcome to LabelPulse",
    # Logo to use for your site, must be present in static files, used for brand on top left
    "site_logo": "admin/img/labelpulse-sitelogo.png",
    # Logo to use for your site, must be present in static files, used for login form logo (defaults to site_logo)
    "login_logo": "admin/img/labelpulse-loginlogo.png",
    # Relative path to a favicon for your site, will default to site_logo if absent (ideally 32x32 px)
    "site_icon": "admin/img/labelpulse-favicon.png",
    # Copyright on the footer
    "copyright": "LabelPulse",
    # Links to put along the top menu
    "topmenu_links": [
        {
            "name": "Home",
            "url": "admin:index",
        },
        {
            "name": "My Label",
            "url": "/admin/labels/label/",
        },
        {
            "name": "Releases",
            "url": "/admin/labels/release/",
        },
        {
            "name": "Tracks",
            "url": "/admin/labels/track/",
        },
        {
            "name": "Campaigns",
            "url": "/admin/campaigns/campaign/",
        },
        {
            "name": "Support",
            "url": "https://github.com/farridav/django-jazzmin/issues",
            "new_window": True,
        },
    ],
    # Forms fieldsets config
    "changeform_format": "single",
    # Replace the popup to modal
    # "related_modal_active": True,
    # List of apps (and/or models) to base side menu ordering off of (does not need to contain all apps/models)
    "order_with_respect_to": ["auth", "labels", "campaigns"],
    # Icons side bar
    "icons": {
        "dashboard": "fas fa-house",
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
        "labels.label": "fas fa-heart",
        "labels.release": "fas fa-layer-group",
        "labels.track": "fas fa-music",
        "campaigns.campaign": "fas fa-bullhorn",
    },
    # UI builder tool
    "show_ui_builder": True,
}

JAZZMIN_UI_TWEAKS = {
    # texts conf
    "footer_small_text": True,
    "body_small_text": True,
    "brand_small_text": True,
    # navbar and footer
    "navbar": "navbar-white navbar-light",
    "no_navbar_border": True,
    "navbar_fixed": True,
    "layout_boxed": False,
    "footer_fixed": False,
    # sidebar
    "sidebar_fixed": True,
    "sidebar": "sidebar-dark-indigo",
    "sidebar_nav_small_text": False,
    "sidebar_disable_expand": True,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": False,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": True,
    # theme
    "theme": "pulse",
    "brand_colour": "navbar-dark",
    "accent": "accent-navy",
    "dark_mode_theme": None,
    "button_classes": {
        "primary": "btn-primary",
        "secondary": "btn-secondary",
        "info": "btn-info",
        "warning": "btn-warning",
        "danger": "btn-danger",
        "success": "btn-success",
    },
}"""

# Logging
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
        },
    },
    "loggers": {
        "django": {
            "handlers": ["console"],
            "level": "DEBUG",
        },
    },
}

# CELERY config
CELERY_BROKER_URL = env("CELERY_BROKER_URL")
CELERY_RESULT_BACKEND = env("CELERY_RESULT_BACKEND")
CELERY_ACCEPT_CONTENT = ["json"]
CELERY_TASK_SERIALIZER = "json"
CELERY_RESULT_SERIALIZER = "json"

CELERY_BEAT_SCHEDULE = {
    "send-campaign-emails-everyday": {
        "task": "modules.services.tasks.send_campaign_emails",
        "schedule": 3600.0,  # every hour
    },
}


# Mailing config
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_USE_TLS = False
EMAIL_PORT = 465
EMAIL_USE_SSL = True
EMAIL_HOST_USER = env("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = env("EMAIL_HOST_PASSWORD")

# Docs config
REST_FRAMEWORK = {
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
}

SPECTACULAR_SETTINGS = {
    "TITLE": "labelpulse",
    "DESCRIPTION": "",
    "VERSION": "1.0.0",
    "SERVE_INCLUDE_SCHEMA": False,
}


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

CORS_ALLOWED_ORIGINS = [
    "http://web:8000",
    "https://label-pulse.com",
    "https://cloud.label-pulse.com",
]

CORS_ORIGIN_WHITELIST = (
    "http://web:8000",
    "https://label-pulse.com",
    "https://cloud.label-pulse.com",
)

CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_HEADERS = [
    "*",
]

CORS_EXPOSE_HEADERS = [
    "Access-Control-Allow-Origin",
]

CSRF_TRUSTED_ORIGINS = [
    "https://label-pulse.com",
    "https://www.label-pulse.com",
    "https://cloud.label-pulse.com",
]

X_FRAME_OPTIONS = "SAMEORIGIN"

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        # "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
            "loaders": [
                "django.template.loaders.app_directories.Loader",
                "django.template.loaders.filesystem.Loader",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# PostgreSQL db
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        "NAME": env("NAME_DB"),
        "USER": env("USER_DB"),
        "PASSWORD": env("PASS_DB"),
        "HOST": env("HOST_DB"),
        "PORT": "5432",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Cloud config
USE_SPACES = env("USE_SPACES") == "TRUE"

if USE_SPACES:
    # Cloud settings
    AWS_ACCESS_KEY_ID = env("AWS_ACCESS_KEY_ID")
    AWS_SECRET_ACCESS_KEY = env("AWS_SECRET_ACCESS_KEY")
    AWS_STORAGE_BUCKET_NAME = env("AWS_STORAGE_BUCKET_NAME")
    AWS_DEFAULT_ACL = "public-read"
    AWS_S3_REGION_NAME = env("AWS_S3_REGION_NAME")
    AWS_S3_CUSTOM_DOMAIN = env("AWS_S3_CUSTOM_DOMAIN")
    AWS_S3_OBJECT_PARAMETERS = {"CacheControl": "max-age=86400"}
    # static settings
    AWS_LOCATION = "static"
    STATIC_URL = f"https://{AWS_S3_CUSTOM_DOMAIN}/{AWS_LOCATION}/"
    STATICFILES_STORAGE = "storages.backends.s3boto3.S3Boto3Storage"
    # public media settings
    PUBLIC_MEDIA_LOCATION = "media"
    MEDIA_URL = f"{AWS_S3_CUSTOM_DOMAIN}/{PUBLIC_MEDIA_LOCATION}/"
    DEFAULT_FILE_STORAGE = "modules.services.storage_backends.MediaStorage"
else:
    STATIC_URL = "/static/"
    STATIC_ROOT = BASE_DIR / "staticfiles"
    MEDIA_URL = "/media/"
    MEDIA_ROOT = BASE_DIR / "mediafiles"

STATICFILES_DIRS = (BASE_DIR / "static",)

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
